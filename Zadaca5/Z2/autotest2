{
    "id": null,
    "name": "Numeri\u010dki algoritmi (2019\/2020), Zada\u0107a 5, zadatak 2",
    "languages": [
        "C++"
    ],
    "tools": {
        "compile": {
            "require": "g++",
            "features": [
                "optimize",
                "warn",
                "pedantic",
                "C++11"
            ]
        },
        "compile[debug]": {
            "require": "g++",
            "features": [
                "debug",
                "C++11"
            ]
        },
        "execute": {
            "environment": {
                "timeout": 10,
                "memory": 1000000
            }
        },
        "debug": [],
        "profile[memcheck]": {
            "require": "valgrind",
            "features": [
                "memcheck"
            ],
            "environment": {
                "timeout": 10
            }
        },
        "profile[sgcheck]": {
            "require": "valgrind",
            "features": [
                "sgcheck"
            ],
            "environment": {
                "timeout": 10
            }
        }
    },
    "tests": [
        {
            "compile": [],
            "options": [
                "silent",
                "terminate"
            ]
        },
        {
            "id": 81,
            "patch": [
                {
                    "position": "main",
                    "code": "\/\/ Test 1: Test minimuma, pocetna tacka lijevo od minimuma\nstd::cout << FindMinimum([](double x) { return 1 + (x - 5) * (x - 5); }, 1);\n",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "5"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 82,
            "patch": [
                {
                    "position": "main",
                    "code": "\/\/ Test 2: Test minimuma, pocetna tacka desno od minimuma\nstd::cout << FindMinimum([](double x) { return 1 + (x - 5) * (x - 5); }, 20);\n",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "5"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 83,
            "patch": [
                {
                    "position": "main",
                    "code": "\/\/ Test 3: FindMinimum, izuzeci -1\ntry {\n    std::cout << FindMinimum([](double x) { return x; }, 1);\n}\ncatch(std::logic_error e) {\n    std::cout << \"'\" << e.what() << \"'\";\n}",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "'Minimum has not found'"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 84,
            "patch": [
                {
                    "position": "main",
                    "code": "\/\/ Test 4: FindMinimum, izuzeci - 2\ntry {\n    FindMinimum([](double x) { return x; }, 1, -1, 1, 1, 1);\n}\ncatch(std::domain_error e) {\n    std::cout << \"'\" << e.what() << \"'\" << std::endl;\n}\ntry {\n    FindMinimum([](double x) { return x; }, 1, 1, -1, 1, 1);\n}\ncatch(std::domain_error e) {\n    std::cout << \"'\" << e.what() << \"'\";\n}\n",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "'Invalid parameters'\n'Invalid parameters'"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 85,
            "patch": [
                {
                    "position": "main",
                    "code": "\/\/ Test 5: FindMinimum, izuzeci - 3\ntry {\n    FindMinimum([](double x) { return x; }, 1, 1, 1, -1, 1);\n}\ncatch(std::domain_error e) {\n    std::cout << \"'\" << e.what() << \"'\" << std::endl;\n}\ntry {\n    FindMinimum([](double x) { return x; }, 1, 1, 1, 1, -1);\n}\ncatch(std::domain_error e) {\n    std::cout << \"'\" << e.what()<< \"'\";\n}",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "'Invalid parameters'\n'Invalid parameters'"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        }
    ]
}